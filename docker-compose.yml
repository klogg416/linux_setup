# .env contents
# PUID=1001
# PGID=120
# TZ=America/Toronto
# APPDATA=/media/docker

---
version: "3.7"
services:

  swag_internal:
    image: linuxserver/swag
    container_name: swag_internal
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - EMAIL=${EMAIL}
      - URL=klaynation.com
      - VALIDATION=dns
      - SUBDOMAINS=wildcard
      - ONLY_SUBDOMAINS=true
      - DNSPLUGIN=cloudflare
      - STAGING=false
      - PROPAGATION=10
    volumes:
      - ${APPDATA}/swag_internal:/config
    ports:
      - 80:80
      - 443:443
    cap_add:
      - NET_ADMIN
    networks:
      proxynet:
    restart: unless-stopped

  unifi-controller:
    image: ghcr.io/linuxserver/unifi-controller:7.4.156
    container_name: unifi-controller
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - MEM_LIMIT=2048 #optional
      - TZ=${TZ}
    volumes:
      - ${APPDATA}/unifi-controller:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    networks:
      proxynet:
    depends_on:
      - "swag_internal"
    restart: unless-stopped

  # ORIGINAL WORKING
  # unifi-controller:
  #   image: ghcr.io/linuxserver/unifi-controller:7.4.156
  #   container_name: unifi-controller
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - MEM_LIMIT=2048 #optional
  #     - TZ=${TZ}
  #     - HOST_OS="ubuntu"
  #     - HOST_HOSTNAME="NUCi3"
  #     - HOST_CONTAINERNAME="unifi-controller"
  #     - UDP_PORT_3478=3478
  #     - TCP_PORT_8080=8080
  #     - TCP_PORT_8443=8443
  #     - TCP_PORT_8880=8880
  #     - TCP_PORT_8843=8843
  #     - UDP_PORT_10001=10001
  #   volumes:
  #     - ${APPDATA}/unifi-controller:/config
  #   network_mode: host
  #   depends_on:
  #     - "swag_internal"
  #   restart: unless-stopped
#    networks:
#      netservices:
#        ipv4_address: 192.168.10.16
#      docker_bridge:
#        ipv4_address: 192.168.2.5

  adguardhome:
    container_name: adGuard-NUCi3
    hostname: adGuard-NUCi3
    image: adguard/adguardhome
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    # network_mode: 'host'
    # cap_add:
    #   - NET_ADMIN # Recommended but not required (DHCP needs NET_ADMIN)      
    environment:
      - TZ:${TZ}
    volumes:
      - ${APPDATA}/adguardhome/work:/opt/adguardhome/work
      - ${APPDATA}/adguardhome/config:/opt/adguardhome/conf
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 784:784/udp
      - 853:853/tcp
      - 3000:3000/tcp
      - 80:80/tcp
    networks:
      netservices:
        ipv4_address: 192.168.10.17
      docker_bridge:
        ipv4_address: 192.168.2.5
    restart: unless-stopped

  adguardhome-sync:
    image: lscr.io/linuxserver/adguardhome-sync:latest
    container_name: adguardhome-sync
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - CONFIGFILE=/config/adguardhome-sync.yaml #optional
    volumes:
      - ${APPDATA}/adguardhome-sync:/config
    ports:
      - 48080:8080
    networks:
      docker_bridge:
        ipv4_address: 192.168.2.6
    depends_on:
      - "adguardhome"
    restart: unless-stopped

  dashy:
    image: lissy93/dashy
    container_name: dashy
    volumes:
      - ${APPDATA}/dashy/my-config.yml:/app/public/conf.yml
    ports:
      - 48081:80
    environment:
      - NODE_ENV=production
      - PUID=${PUID}
      - PGID=${PGID}
    networks:
      proxynet:
    restart: unless-stopped
    # Configure healthchecks
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s


networks:
  proxynet:
    name: proxynet
    driver: bridge
    driver_opts:
      parent: eno1
#     ipam:
#       config:
#         - subnet: 192.168.10.0/24
#           gateway: 192.168.10.1
#           ip_range: 192.168.10.32/28   # .32 - .47
  netservices:
    name: netservices
    driver: macvlan
    driver_opts:
      parent: eno1
    ipam:
      config:
        - subnet: 192.168.10.0/24
          gateway: 192.168.10.1
          ip_range: 192.168.10.16/28   # .16 - .31
  docker_bridge:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.2.0/24
          gateway: 192.168.2.1
          ip_range: 192.168.2.2/24
